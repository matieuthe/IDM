/*
 * generated by Xtext 2.12.0
 */
grammar InternalCsvMan;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.csvmanl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.csvmanl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.csvmanl.services.CsvManGrammarAccess;

}
@parser::members {
	private CsvManGrammarAccess grammarAccess;

	public void setGrammarAccess(CsvManGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleProgram
entryRuleProgram
:
{ before(grammarAccess.getProgramRule()); }
	 ruleProgram
{ after(grammarAccess.getProgramRule()); } 
	 EOF 
;

// Rule Program
ruleProgram 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProgramAccess().getGroup()); }
		(rule__Program__Group__0)
		{ after(grammarAccess.getProgramAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInstruction
entryRuleInstruction
:
{ before(grammarAccess.getInstructionRule()); }
	 ruleInstruction
{ after(grammarAccess.getInstructionRule()); } 
	 EOF 
;

// Rule Instruction
ruleInstruction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInstructionAccess().getAlternatives()); }
		(rule__Instruction__Alternatives)
		{ after(grammarAccess.getInstructionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCreate
entryRuleCreate
:
{ before(grammarAccess.getCreateRule()); }
	 ruleCreate
{ after(grammarAccess.getCreateRule()); } 
	 EOF 
;

// Rule Create
ruleCreate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCreateAccess().getGroup()); }
		(rule__Create__Group__0)
		{ after(grammarAccess.getCreateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLoad
entryRuleLoad
:
{ before(grammarAccess.getLoadRule()); }
	 ruleLoad
{ after(grammarAccess.getLoadRule()); } 
	 EOF 
;

// Rule Load
ruleLoad 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLoadAccess().getGroup()); }
		(rule__Load__Group__0)
		{ after(grammarAccess.getLoadAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleShow
entryRuleShow
:
{ before(grammarAccess.getShowRule()); }
	 ruleShow
{ after(grammarAccess.getShowRule()); } 
	 EOF 
;

// Rule Show
ruleShow 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getShowAccess().getGroup()); }
		(rule__Show__Group__0)
		{ after(grammarAccess.getShowAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUpdate
entryRuleUpdate
:
{ before(grammarAccess.getUpdateRule()); }
	 ruleUpdate
{ after(grammarAccess.getUpdateRule()); } 
	 EOF 
;

// Rule Update
ruleUpdate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUpdateAccess().getGroup()); }
		(rule__Update__Group__0)
		{ after(grammarAccess.getUpdateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAdd
entryRuleAdd
:
{ before(grammarAccess.getAddRule()); }
	 ruleAdd
{ after(grammarAccess.getAddRule()); } 
	 EOF 
;

// Rule Add
ruleAdd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAddAccess().getGroup()); }
		(rule__Add__Group__0)
		{ after(grammarAccess.getAddAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJoin
entryRuleJoin
:
{ before(grammarAccess.getJoinRule()); }
	 ruleJoin
{ after(grammarAccess.getJoinRule()); } 
	 EOF 
;

// Rule Join
ruleJoin 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJoinAccess().getGroup()); }
		(rule__Join__Group__0)
		{ after(grammarAccess.getJoinAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDelete
entryRuleDelete
:
{ before(grammarAccess.getDeleteRule()); }
	 ruleDelete
{ after(grammarAccess.getDeleteRule()); } 
	 EOF 
;

// Rule Delete
ruleDelete 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeleteAccess().getGroup()); }
		(rule__Delete__Group__0)
		{ after(grammarAccess.getDeleteAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExit
entryRuleExit
:
{ before(grammarAccess.getExitRule()); }
	 ruleExit
{ after(grammarAccess.getExitRule()); } 
	 EOF 
;

// Rule Exit
ruleExit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExitAccess().getGroup()); }
		(rule__Exit__Group__0)
		{ after(grammarAccess.getExitAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWhere
entryRuleWhere
:
{ before(grammarAccess.getWhereRule()); }
	 ruleWhere
{ after(grammarAccess.getWhereRule()); } 
	 EOF 
;

// Rule Where
ruleWhere 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWhereAccess().getGroup()); }
		(rule__Where__Group__0)
		{ after(grammarAccess.getWhereAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCondition
entryRuleCondition
:
{ before(grammarAccess.getConditionRule()); }
	 ruleCondition
{ after(grammarAccess.getConditionRule()); } 
	 EOF 
;

// Rule Condition
ruleCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionAccess().getGroup()); }
		(rule__Condition__Group__0)
		{ after(grammarAccess.getConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameter
entryRuleParameter
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterAccess().getGroup()); }
		(rule__Parameter__Group__0)
		{ after(grammarAccess.getParameterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComment
entryRuleComment
:
{ before(grammarAccess.getCommentRule()); }
	 ruleComment
{ after(grammarAccess.getCommentRule()); } 
	 EOF 
;

// Rule Comment
ruleComment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommentAccess().getAlternatives()); }
		(rule__Comment__Alternatives)
		{ after(grammarAccess.getCommentAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionAccess().getCreateParserRuleCall_0()); }
		ruleCreate
		{ after(grammarAccess.getInstructionAccess().getCreateParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getLoadParserRuleCall_1()); }
		ruleLoad
		{ after(grammarAccess.getInstructionAccess().getLoadParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getShowParserRuleCall_2()); }
		ruleShow
		{ after(grammarAccess.getInstructionAccess().getShowParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getUpdateParserRuleCall_3()); }
		ruleUpdate
		{ after(grammarAccess.getInstructionAccess().getUpdateParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getAddParserRuleCall_4()); }
		ruleAdd
		{ after(grammarAccess.getInstructionAccess().getAddParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getJoinParserRuleCall_5()); }
		ruleJoin
		{ after(grammarAccess.getInstructionAccess().getJoinParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getDeleteParserRuleCall_6()); }
		ruleDelete
		{ after(grammarAccess.getInstructionAccess().getDeleteParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getExitParserRuleCall_7()); }
		ruleExit
		{ after(grammarAccess.getInstructionAccess().getExitParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getCommentParserRuleCall_8()); }
		ruleComment
		{ after(grammarAccess.getInstructionAccess().getCommentParserRuleCall_8()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getEqualsSignKeyword_2_0()); }
		'='
		{ after(grammarAccess.getConditionAccess().getEqualsSignKeyword_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getConditionAccess().getOPTerminalRuleCall_2_1()); }
		RULE_OP
		{ after(grammarAccess.getConditionAccess().getOPTerminalRuleCall_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommentAccess().getML_COMMENTTerminalRuleCall_0()); }
		RULE_ML_COMMENT
		{ after(grammarAccess.getCommentAccess().getML_COMMENTTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getCommentAccess().getSL_COMMENTTerminalRuleCall_1()); }
		RULE_SL_COMMENT
		{ after(grammarAccess.getCommentAccess().getSL_COMMENTTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getINTTerminalRuleCall_2()); }
		RULE_INT
		{ after(grammarAccess.getEStringAccess().getINTTerminalRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__0__Impl
	rule__Program__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getProgramAction_0()); }
	()
	{ after(grammarAccess.getProgramAccess().getProgramAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getInstructionAssignment_1()); }
	(rule__Program__InstructionAssignment_1)*
	{ after(grammarAccess.getProgramAccess().getInstructionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Create__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Create__Group__0__Impl
	rule__Create__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Create__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateAccess().getCreateAction_0()); }
	()
	{ after(grammarAccess.getCreateAccess().getCreateAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Create__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Create__Group__1__Impl
	rule__Create__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Create__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateAccess().getCreateKeyword_1()); }
	'create'
	{ after(grammarAccess.getCreateAccess().getCreateKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Create__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Create__Group__2__Impl
	rule__Create__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Create__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateAccess().getTableAssignment_2()); }
	(rule__Create__TableAssignment_2)
	{ after(grammarAccess.getCreateAccess().getTableAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Create__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Create__Group__3__Impl
	rule__Create__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Create__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateAccess().getLeftParenthesisKeyword_3()); }
	'('
	{ after(grammarAccess.getCreateAccess().getLeftParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Create__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Create__Group__4__Impl
	rule__Create__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Create__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateAccess().getColonneAssignment_4()); }
	(rule__Create__ColonneAssignment_4)
	{ after(grammarAccess.getCreateAccess().getColonneAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Create__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Create__Group__5__Impl
	rule__Create__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Create__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateAccess().getGroup_5()); }
	(rule__Create__Group_5__0)*
	{ after(grammarAccess.getCreateAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Create__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Create__Group__6__Impl
	rule__Create__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Create__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateAccess().getRightParenthesisKeyword_6()); }
	')'
	{ after(grammarAccess.getCreateAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Create__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Create__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Create__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateAccess().getNLTerminalRuleCall_7()); }
	RULE_NL
	{ after(grammarAccess.getCreateAccess().getNLTerminalRuleCall_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Create__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Create__Group_5__0__Impl
	rule__Create__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Create__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateAccess().getCommaKeyword_5_0()); }
	','
	{ after(grammarAccess.getCreateAccess().getCommaKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Create__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Create__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Create__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateAccess().getColonneAssignment_5_1()); }
	(rule__Create__ColonneAssignment_5_1)
	{ after(grammarAccess.getCreateAccess().getColonneAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Load__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Load__Group__0__Impl
	rule__Load__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoadAccess().getLoadAction_0()); }
	()
	{ after(grammarAccess.getLoadAccess().getLoadAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Load__Group__1__Impl
	rule__Load__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoadAccess().getLoadKeyword_1()); }
	'load'
	{ after(grammarAccess.getLoadAccess().getLoadKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Load__Group__2__Impl
	rule__Load__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoadAccess().getTableAssignment_2()); }
	(rule__Load__TableAssignment_2)
	{ after(grammarAccess.getLoadAccess().getTableAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Load__Group__3__Impl
	rule__Load__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoadAccess().getAsKeyword_3()); }
	'as'
	{ after(grammarAccess.getLoadAccess().getAsKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Load__Group__4__Impl
	rule__Load__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoadAccess().getAliasAssignment_4()); }
	(rule__Load__AliasAssignment_4)
	{ after(grammarAccess.getLoadAccess().getAliasAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Load__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoadAccess().getNLTerminalRuleCall_5()); }
	RULE_NL
	{ after(grammarAccess.getLoadAccess().getNLTerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Show__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Show__Group__0__Impl
	rule__Show__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Show__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShowAccess().getShowAction_0()); }
	()
	{ after(grammarAccess.getShowAccess().getShowAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Show__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Show__Group__1__Impl
	rule__Show__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Show__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShowAccess().getShowKeyword_1()); }
	'show'
	{ after(grammarAccess.getShowAccess().getShowKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Show__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Show__Group__2__Impl
	rule__Show__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Show__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShowAccess().getTableAssignment_2()); }
	(rule__Show__TableAssignment_2)
	{ after(grammarAccess.getShowAccess().getTableAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Show__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Show__Group__3__Impl
	rule__Show__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Show__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShowAccess().getGroup_3()); }
	(rule__Show__Group_3__0)?
	{ after(grammarAccess.getShowAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Show__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Show__Group__4__Impl
	rule__Show__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Show__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShowAccess().getWhereAssignment_4()); }
	(rule__Show__WhereAssignment_4)?
	{ after(grammarAccess.getShowAccess().getWhereAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Show__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Show__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Show__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShowAccess().getNLTerminalRuleCall_5()); }
	RULE_NL
	{ after(grammarAccess.getShowAccess().getNLTerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Show__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Show__Group_3__0__Impl
	rule__Show__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Show__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShowAccess().getLeftParenthesisKeyword_3_0()); }
	'('
	{ after(grammarAccess.getShowAccess().getLeftParenthesisKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Show__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Show__Group_3__1__Impl
	rule__Show__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Show__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShowAccess().getColonneAssignment_3_1()); }
	(rule__Show__ColonneAssignment_3_1)
	{ after(grammarAccess.getShowAccess().getColonneAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Show__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Show__Group_3__2__Impl
	rule__Show__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Show__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShowAccess().getGroup_3_2()); }
	(rule__Show__Group_3_2__0)*
	{ after(grammarAccess.getShowAccess().getGroup_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Show__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Show__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Show__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShowAccess().getRightParenthesisKeyword_3_3()); }
	')'
	{ after(grammarAccess.getShowAccess().getRightParenthesisKeyword_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Show__Group_3_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Show__Group_3_2__0__Impl
	rule__Show__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Show__Group_3_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShowAccess().getCommaKeyword_3_2_0()); }
	','
	{ after(grammarAccess.getShowAccess().getCommaKeyword_3_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Show__Group_3_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Show__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Show__Group_3_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShowAccess().getColonneAssignment_3_2_1()); }
	(rule__Show__ColonneAssignment_3_2_1)
	{ after(grammarAccess.getShowAccess().getColonneAssignment_3_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Update__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group__0__Impl
	rule__Update__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getUpdateAction_0()); }
	()
	{ after(grammarAccess.getUpdateAccess().getUpdateAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group__1__Impl
	rule__Update__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getUpdateKeyword_1()); }
	'update'
	{ after(grammarAccess.getUpdateAccess().getUpdateKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group__2__Impl
	rule__Update__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getTableAssignment_2()); }
	(rule__Update__TableAssignment_2)
	{ after(grammarAccess.getUpdateAccess().getTableAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group__3__Impl
	rule__Update__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getSetKeyword_3()); }
	'set'
	{ after(grammarAccess.getUpdateAccess().getSetKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group__4__Impl
	rule__Update__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getParameterAssignment_4()); }
	(rule__Update__ParameterAssignment_4)
	{ after(grammarAccess.getUpdateAccess().getParameterAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group__5__Impl
	rule__Update__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getGroup_5()); }
	(rule__Update__Group_5__0)*
	{ after(grammarAccess.getUpdateAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group__6__Impl
	rule__Update__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getWhereAssignment_6()); }
	(rule__Update__WhereAssignment_6)?
	{ after(grammarAccess.getUpdateAccess().getWhereAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getNLTerminalRuleCall_7()); }
	RULE_NL
	{ after(grammarAccess.getUpdateAccess().getNLTerminalRuleCall_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Update__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group_5__0__Impl
	rule__Update__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getCommaKeyword_5_0()); }
	','
	{ after(grammarAccess.getUpdateAccess().getCommaKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getParameterAssignment_5_1()); }
	(rule__Update__ParameterAssignment_5_1)
	{ after(grammarAccess.getUpdateAccess().getParameterAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Add__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group__0__Impl
	rule__Add__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getAddAction_0()); }
	()
	{ after(grammarAccess.getAddAccess().getAddAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group__1__Impl
	rule__Add__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getAddKeyword_1()); }
	'add'
	{ after(grammarAccess.getAddAccess().getAddKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group__2__Impl
	rule__Add__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getAddAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group__3__Impl
	rule__Add__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getValeurAssignment_3()); }
	(rule__Add__ValeurAssignment_3)
	{ after(grammarAccess.getAddAccess().getValeurAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group__4__Impl
	rule__Add__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getGroup_4()); }
	(rule__Add__Group_4__0)*
	{ after(grammarAccess.getAddAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group__5__Impl
	rule__Add__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getAddAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group__6__Impl
	rule__Add__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getInKeyword_6()); }
	'in'
	{ after(grammarAccess.getAddAccess().getInKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group__7__Impl
	rule__Add__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getTableAssignment_7()); }
	(rule__Add__TableAssignment_7)
	{ after(grammarAccess.getAddAccess().getTableAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getNLTerminalRuleCall_8()); }
	RULE_NL
	{ after(grammarAccess.getAddAccess().getNLTerminalRuleCall_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Add__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group_4__0__Impl
	rule__Add__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getAddAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getValeurAssignment_4_1()); }
	(rule__Add__ValeurAssignment_4_1)
	{ after(grammarAccess.getAddAccess().getValeurAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Join__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Join__Group__0__Impl
	rule__Join__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinAccess().getJoinAction_0()); }
	()
	{ after(grammarAccess.getJoinAccess().getJoinAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Join__Group__1__Impl
	rule__Join__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinAccess().getJoinKeyword_1()); }
	'join'
	{ after(grammarAccess.getJoinAccess().getJoinKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Join__Group__2__Impl
	rule__Join__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinAccess().getTable1Assignment_2()); }
	(rule__Join__Table1Assignment_2)
	{ after(grammarAccess.getJoinAccess().getTable1Assignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Join__Group__3__Impl
	rule__Join__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinAccess().getTable2Assignment_3()); }
	(rule__Join__Table2Assignment_3)
	{ after(grammarAccess.getJoinAccess().getTable2Assignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Join__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJoinAccess().getNLTerminalRuleCall_4()); }
	RULE_NL
	{ after(grammarAccess.getJoinAccess().getNLTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Delete__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Delete__Group__0__Impl
	rule__Delete__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteAccess().getDeleteAction_0()); }
	()
	{ after(grammarAccess.getDeleteAccess().getDeleteAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Delete__Group__1__Impl
	rule__Delete__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteAccess().getDeleteKeyword_1()); }
	'delete'
	{ after(grammarAccess.getDeleteAccess().getDeleteKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Delete__Group__2__Impl
	rule__Delete__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteAccess().getTableAssignment_2()); }
	(rule__Delete__TableAssignment_2)
	{ after(grammarAccess.getDeleteAccess().getTableAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Delete__Group__3__Impl
	rule__Delete__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteAccess().getWhereAssignment_3()); }
	(rule__Delete__WhereAssignment_3)?
	{ after(grammarAccess.getDeleteAccess().getWhereAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Delete__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteAccess().getNLTerminalRuleCall_4()); }
	RULE_NL
	{ after(grammarAccess.getDeleteAccess().getNLTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exit__Group__0__Impl
	rule__Exit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExitAccess().getExitAction_0()); }
	()
	{ after(grammarAccess.getExitAccess().getExitAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exit__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExitAccess().getExitKeyword_1()); }
	'exit'
	{ after(grammarAccess.getExitAccess().getExitKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Where__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Where__Group__0__Impl
	rule__Where__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Where__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhereAccess().getWhereAction_0()); }
	()
	{ after(grammarAccess.getWhereAccess().getWhereAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Where__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Where__Group__1__Impl
	rule__Where__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Where__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhereAccess().getWhereKeyword_1()); }
	'where'
	{ after(grammarAccess.getWhereAccess().getWhereKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Where__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Where__Group__2__Impl
	rule__Where__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Where__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhereAccess().getConditionAssignment_2()); }
	(rule__Where__ConditionAssignment_2)
	{ after(grammarAccess.getWhereAccess().getConditionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Where__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Where__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Where__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhereAccess().getGroup_3()); }
	(rule__Where__Group_3__0)*
	{ after(grammarAccess.getWhereAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Where__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Where__Group_3__0__Impl
	rule__Where__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Where__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhereAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getWhereAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Where__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Where__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Where__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhereAccess().getConditionAssignment_3_1()); }
	(rule__Where__ConditionAssignment_3_1)
	{ after(grammarAccess.getWhereAccess().getConditionAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__0__Impl
	rule__Condition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getConditionAction_0()); }
	()
	{ after(grammarAccess.getConditionAccess().getConditionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__1__Impl
	rule__Condition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getAtributAssignment_1()); }
	(rule__Condition__AtributAssignment_1)
	{ after(grammarAccess.getConditionAccess().getAtributAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__2__Impl
	rule__Condition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getAlternatives_2()); }
	(rule__Condition__Alternatives_2)
	{ after(grammarAccess.getConditionAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getValeurAssignment_3()); }
	(rule__Condition__ValeurAssignment_3)
	{ after(grammarAccess.getConditionAccess().getValeurAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getParameterAction_0()); }
	()
	{ after(grammarAccess.getParameterAccess().getParameterAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__1__Impl
	rule__Parameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getColonneAssignment_1()); }
	(rule__Parameter__ColonneAssignment_1)
	{ after(grammarAccess.getParameterAccess().getColonneAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__2__Impl
	rule__Parameter__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getParameterAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getValueAssignment_3()); }
	(rule__Parameter__ValueAssignment_3)
	{ after(grammarAccess.getParameterAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Program__InstructionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getInstructionInstructionParserRuleCall_1_0()); }
		ruleInstruction
		{ after(grammarAccess.getProgramAccess().getInstructionInstructionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Create__TableAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateAccess().getTableEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getCreateAccess().getTableEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Create__ColonneAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateAccess().getColonneEStringParserRuleCall_4_0()); }
		ruleEString
		{ after(grammarAccess.getCreateAccess().getColonneEStringParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Create__ColonneAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreateAccess().getColonneEStringParserRuleCall_5_1_0()); }
		ruleEString
		{ after(grammarAccess.getCreateAccess().getColonneEStringParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__TableAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLoadAccess().getTableEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getLoadAccess().getTableEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__AliasAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLoadAccess().getAliasEStringParserRuleCall_4_0()); }
		ruleEString
		{ after(grammarAccess.getLoadAccess().getAliasEStringParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Show__TableAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShowAccess().getTableEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getShowAccess().getTableEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Show__ColonneAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShowAccess().getColonneEStringParserRuleCall_3_1_0()); }
		ruleEString
		{ after(grammarAccess.getShowAccess().getColonneEStringParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Show__ColonneAssignment_3_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShowAccess().getColonneEStringParserRuleCall_3_2_1_0()); }
		ruleEString
		{ after(grammarAccess.getShowAccess().getColonneEStringParserRuleCall_3_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Show__WhereAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShowAccess().getWhereWhereParserRuleCall_4_0()); }
		ruleWhere
		{ after(grammarAccess.getShowAccess().getWhereWhereParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__TableAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateAccess().getTableEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getUpdateAccess().getTableEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__ParameterAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateAccess().getParameterParameterParserRuleCall_4_0()); }
		ruleParameter
		{ after(grammarAccess.getUpdateAccess().getParameterParameterParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__ParameterAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateAccess().getParameterParameterParserRuleCall_5_1_0()); }
		ruleParameter
		{ after(grammarAccess.getUpdateAccess().getParameterParameterParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__WhereAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateAccess().getWhereWhereParserRuleCall_6_0()); }
		ruleWhere
		{ after(grammarAccess.getUpdateAccess().getWhereWhereParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__ValeurAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddAccess().getValeurEStringParserRuleCall_3_0()); }
		ruleEString
		{ after(grammarAccess.getAddAccess().getValeurEStringParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__ValeurAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddAccess().getValeurEStringParserRuleCall_4_1_0()); }
		ruleEString
		{ after(grammarAccess.getAddAccess().getValeurEStringParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__TableAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddAccess().getTableEStringParserRuleCall_7_0()); }
		ruleEString
		{ after(grammarAccess.getAddAccess().getTableEStringParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Table1Assignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJoinAccess().getTable1EStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getJoinAccess().getTable1EStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Table2Assignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJoinAccess().getTable2EStringParserRuleCall_3_0()); }
		ruleEString
		{ after(grammarAccess.getJoinAccess().getTable2EStringParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__TableAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeleteAccess().getTableEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getDeleteAccess().getTableEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__WhereAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeleteAccess().getWhereWhereParserRuleCall_3_0()); }
		ruleWhere
		{ after(grammarAccess.getDeleteAccess().getWhereWhereParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Where__ConditionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhereAccess().getConditionConditionParserRuleCall_2_0()); }
		ruleCondition
		{ after(grammarAccess.getWhereAccess().getConditionConditionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Where__ConditionAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhereAccess().getConditionConditionParserRuleCall_3_1_0()); }
		ruleCondition
		{ after(grammarAccess.getWhereAccess().getConditionConditionParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__AtributAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getAtributEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getConditionAccess().getAtributEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__ValeurAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getValeurEStringParserRuleCall_3_0()); }
		ruleEString
		{ after(grammarAccess.getConditionAccess().getValeurEStringParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__ColonneAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getColonneEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getParameterAccess().getColonneEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getValueEStringParserRuleCall_3_0()); }
		ruleEString
		{ after(grammarAccess.getParameterAccess().getValueEStringParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_OP : ('<'|'>'|'>='|'<=');

RULE_NL : ('\b'|'\t')* ('\r'|'\n'|';')+;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
